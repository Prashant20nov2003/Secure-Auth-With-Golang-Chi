// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: userSecurityUpdates.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const changePassword = `-- name: ChangePassword :one
SELECT 
  user_id::VARCHAR,
  username::VARCHAR,
  email::VARCHAR,
  isEmailVerified::VARCHAR
FROM change_password($1, $2)
AS result(user_id, username, email, isEmailVerified)
`

type ChangePasswordParams struct {
	Password      string    `json:"_password"`
	EmailverifyID uuid.UUID `json:"_emailverify_id"`
}

type ChangePasswordRow struct {
	UserID          string `json:"user_id"`
	Username        string `json:"username"`
	Email           string `json:"email"`
	Isemailverified string `json:"isemailverified"`
}

func (q *Queries) ChangePassword(ctx context.Context, arg ChangePasswordParams) (ChangePasswordRow, error) {
	row := q.db.QueryRowContext(ctx, changePassword, arg.Password, arg.EmailverifyID)
	var i ChangePasswordRow
	err := row.Scan(
		&i.UserID,
		&i.Username,
		&i.Email,
		&i.Isemailverified,
	)
	return i, err
}
