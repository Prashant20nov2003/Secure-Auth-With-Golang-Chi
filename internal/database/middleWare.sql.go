// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: middleWare.sql

package database

import (
	"context"
)

const checkUserValidationById = `-- name: CheckUserValidationById :one
SELECT user_id, username, email, phonenumber, password, last_login, isemailverified, isphoneverified FROM Users WHERE user_id = $1
`

func (q *Queries) CheckUserValidationById(ctx context.Context, userID string) (User, error) {
	row := q.db.QueryRowContext(ctx, checkUserValidationById, userID)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Username,
		&i.Email,
		&i.Phonenumber,
		&i.Password,
		&i.LastLogin,
		&i.Isemailverified,
		&i.Isphoneverified,
	)
	return i, err
}

const checkUserValidationByUsername = `-- name: CheckUserValidationByUsername :one
SELECT user_id, username, email, phonenumber, password, last_login, isemailverified, isphoneverified FROM Users WHERE username = $1
`

func (q *Queries) CheckUserValidationByUsername(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, checkUserValidationByUsername, username)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Username,
		&i.Email,
		&i.Phonenumber,
		&i.Password,
		&i.LastLogin,
		&i.Isemailverified,
		&i.Isphoneverified,
	)
	return i, err
}
